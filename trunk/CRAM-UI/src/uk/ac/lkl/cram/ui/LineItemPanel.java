
package uk.ac.lkl.cram.ui;

import java.awt.Dimension;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import uk.ac.lkl.cram.model.LineItem;
import uk.ac.lkl.cram.model.Module;

/**
 * $Date$
 * $Revision$
 * @author Bernard Horan
 */
public class LineItemPanel extends javax.swing.JPanel {
    public static final String PROP_SELECTED_LINEITEM = " selected_line_item";
    private LineItem selectedLineItem = null;
    private final Module module;

    

    /**
     * Creates new form LineItemPanel
     * @param module 
     */
    public LineItemPanel(Module module) {
	initComponents();
	this.module = module;
	activitiesTable.setModel(new ModuleTableModel(module, true));
	activitiesTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

	    @Override
	    public void valueChanged(ListSelectionEvent lse) {
		if (!lse.getValueIsAdjusting()) {
		    ListSelectionModel lsModel = (ListSelectionModel) lse.getSource();
		    int selectionIndex = lsModel.getMinSelectionIndex();
		    setSelectionIndex(selectionIndex);
		}
	    }
	});
	activitiesTable.getColumnModel().getColumn(0).setPreferredWidth(150);
	activitiesTable.getTableHeader().setPreferredSize(new Dimension(activitiesTable.getColumnModel().getTotalColumnWidth(),36));
	setSize(activitiesTable.getSize());
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        activitiesTable = new javax.swing.JTable();

        activitiesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Activity", "Weekly Hours", "Non-Weekly Hours", "Total Hours"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        activitiesTable.setRequestFocusEnabled(false);
        activitiesTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(activitiesTable);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable activitiesTable;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
    
    private void setSelectionIndex(int index) {
	//TODO -- this should only be TLALineItems
	LineItem oldValue = selectedLineItem;
	if (index != -1) {
	    selectedLineItem = module.getLineItems().get(index);
	} else {
	    selectedLineItem = null;
	}
	firePropertyChange(PROP_SELECTED_LINEITEM, oldValue, selectedLineItem);
    }

    JTable getTable() {
	return activitiesTable;
    }

    LineItem getSelectedLineItem() {
	return selectedLineItem;
    }

}
