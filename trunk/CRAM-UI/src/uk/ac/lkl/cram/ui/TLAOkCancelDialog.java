/*
 * Copyright 2014 London Knowledge Lab, Institute of Education.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package uk.ac.lkl.cram.ui;

import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.KeyStroke;
import javax.swing.undo.CompoundEdit;
import uk.ac.lkl.cram.model.AELMTest;
import uk.ac.lkl.cram.model.Module;
import uk.ac.lkl.cram.model.TLALineItem;
import uk.ac.lkl.cram.ui.wizard.LineItemsDetailVisualPanel;
import uk.ac.lkl.cram.ui.wizard.TLALearningDetailsVisualPanel;
import uk.ac.lkl.cram.ui.wizard.TLAPropertiesVisualPanel;

/**
 * Class that implements an OK/Cancel dialog box for editing the attributes
 * of a TLALineItem and its activity.
 * @see TLALineItem
 * @see TLActivity
 * @version $Revision$
 * @author Bernard Horan
 */
//$Date$
@SuppressWarnings("ClassWithoutLogger")
public class TLAOkCancelDialog extends javax.swing.JDialog {

    /**
     * A return status code - returned if Cancel button has been pressed
     */
    public static final int RET_CANCEL = 0;
    /**
     * A return status code - returned if OK button has been pressed
     */
    public static final int RET_OK = 1;
    /**
     * The compound edit that keeps all of the edits made during the dialog user's
     * interaction with the dialogue box
     */
    private final CompoundEdit compoundEdit;

    /**
     * Creates new form TLAOkCancelDialog
     * @param parent the parent of the dialog box (matters for modality)
     * @param modal if true, the dialogue box is application modal
     * @param module the module containing the TLALineItem
     * @param lineItem the line item being edited
     * @param cEdit  the compound edit that keeps all of the edits made
     */
    public TLAOkCancelDialog(java.awt.Frame parent, boolean modal, Module module, TLALineItem lineItem, CompoundEdit cEdit) {
	super(parent, modal);
	initComponents();

        this.compoundEdit = cEdit;
        
	// Close the dialog when Esc is pressed
	String cancelName = "cancel";
	InputMap inputMap = getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
	inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), cancelName);
	ActionMap actionMap = getRootPane().getActionMap();
	actionMap.put(cancelName, new AbstractAction() {
	    @Override
	    public void actionPerformed(ActionEvent e) {
		doClose(RET_CANCEL);
	    }
	});
	TLALearningDetailsVisualPanel tlaldvp = new TLALearningDetailsVisualPanel(lineItem, compoundEdit);
	tabbedPane.addTab(tlaldvp.getName(), tlaldvp);
	TLAPropertiesVisualPanel tlapvp = new TLAPropertiesVisualPanel(lineItem, compoundEdit);
	tabbedPane.addTab(tlapvp.getName(), tlapvp);
	LineItemsDetailVisualPanel lidvp = new LineItemsDetailVisualPanel(module, lineItem, compoundEdit);
	tabbedPane.addTab(lidvp.getName(), lidvp);
	
	PropertyChangeListener validityListener = new PropertyChangeListener() {

	    @Override
	    public void propertyChange(PropertyChangeEvent pce) {
		Boolean valid = (Boolean) pce.getNewValue();
		okButton.setEnabled(valid);
	    }
	};
	tlaldvp.addPropertyChangeListener(TLALearningDetailsVisualPanel.PROP_VALID, validityListener);
	lidvp.addPropertyChangeListener(LineItemsDetailVisualPanel.PROP_VALID, validityListener);
	setSize(getPreferredSize());
    }
    
    public void setSelectedIndex(int index) {
	tabbedPane.setSelectedIndex(index);
    }

    /**
     * @return the return status of this dialog - one of RET_OK or RET_CANCEL
     */
    public int getReturnStatus() {
	return returnStatus;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        tabbedPane = new javax.swing.JTabbedPane();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(0, 0, 0)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(0, 381, Short.MAX_VALUE)
                        .add(okButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 67, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(cancelButton))
                    .add(tabbedPane))
                .add(0, 0, 0))
        );

        layout.linkSize(new java.awt.Component[] {cancelButton, okButton}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(0, 0, 0)
                .add(tabbedPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE)
                .add(0, 0, 0)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(cancelButton)
                    .add(okButton))
                .addContainerGap())
        );

        getRootPane().setDefaultButton(okButton);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
	compoundEdit.end();
        doClose(RET_OK);
    }//GEN-LAST:event_okButtonActionPerformed
    
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
	compoundEdit.end();
        compoundEdit.undo();
        doClose(RET_CANCEL);
    }//GEN-LAST:event_cancelButtonActionPerformed

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
	doClose(RET_CANCEL);
    }//GEN-LAST:event_closeDialog
    
    private void doClose(int retStatus) {
	returnStatus = retStatus;
	setVisible(false);
	dispose();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

	/* Create and display the dialog */
	java.awt.EventQueue.invokeLater(new Runnable() {
	    @Override
	    public void run() {
		Module m = AELMTest.populateModule();
		TLALineItem li = m.getTLALineItems().get(0);
		TLAOkCancelDialog dialog = new TLAOkCancelDialog(new javax.swing.JFrame(), true, m, li, new CompoundEdit());
		dialog.addWindowListener(new java.awt.event.WindowAdapter() {
		    @Override
		    public void windowClosing(java.awt.event.WindowEvent e) {
			System.exit(0);
		    }
		});
		dialog.setVisible(true);
	    }
	});
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton okButton;
    private javax.swing.JTabbedPane tabbedPane;
    // End of variables declaration//GEN-END:variables
    private int returnStatus = RET_CANCEL;
}
