
package uk.ac.lkl.cram.ui;

import java.awt.Dimension;
import java.util.logging.Logger;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import org.jdesktop.swingx.JXTaskPane;
import org.jfree.chart.ChartPanel;
import uk.ac.lkl.cram.model.AELMTest;
import uk.ac.lkl.cram.model.Module;

/**
 * $Date$
 * @author Bernard Horan
 */
public class ModuleInternalFrame extends javax.swing.JInternalFrame {
    private static final Logger LOGGER = Logger.getLogger(ModuleInternalFrame.class.getName());
    private final Module module;

    /**
     * Creates new form ModuleInternalFrame
     * @param module 
     */
    public ModuleInternalFrame(Module module) {
	initComponents();
	this.module = module;
	setTitle("Module Name: " + module.getModuleName());
	setClosable(true);
	leftTaskPaneContainer.add(createCourseDataPane());
	leftTaskPaneContainer.add(createLineItemPane());
	leftTaskPaneContainer.add(createTutorHoursPane());
	leftTaskPaneContainer.add(createTutorCostPane());
	rightTaskPaneContainer.add(createLearningTypeChartPane());
	rightTaskPaneContainer.add(createLearningExperienceChartPane());
	rightTaskPaneContainer.add(createHoursChartPane());
	rightTaskPaneContainer.add(createTotalCostsPane());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        leftTaskPaneContainer = new org.jdesktop.swingx.JXTaskPaneContainer();
        jScrollPane3 = new javax.swing.JScrollPane();
        rightTaskPaneContainer = new org.jdesktop.swingx.JXTaskPaneContainer();

        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setDoubleBuffered(true);

        leftTaskPaneContainer.setPaintBorderInsets(false);
        leftTaskPaneContainer.setLayout(new org.jdesktop.swingx.VerticalLayout());
        jScrollPane1.setViewportView(leftTaskPaneContainer);

        jScrollPane3.setViewportView(rightTaskPaneContainer);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                .add(0, 0, 0)
                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
            .add(jScrollPane3)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private org.jdesktop.swingx.JXTaskPaneContainer leftTaskPaneContainer;
    private org.jdesktop.swingx.JXTaskPaneContainer rightTaskPaneContainer;
    // End of variables declaration//GEN-END:variables

    public static void main(String args[]) {
	final JFrame frame = new JFrame("ModuleInternalFrame test");
	frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	frame.setSize(500, 500);
	JDesktopPane desktop = new JDesktopPane();
	frame.getContentPane().add(desktop);
	ModuleInternalFrame mif = new ModuleInternalFrame(AELMTest.populateModule());
	mif.setVisible(true);
	desktop.add(mif);

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
	    @Override
            public void run() {
                frame.setVisible(true);
            }
        });
    }

    private JXTaskPane createCourseDataPane() {
	JXTaskPane courseDataPane = new JXTaskPane();
	courseDataPane.setTitle("Course Data");
	courseDataPane.add(new ModulePanel(module));
	return courseDataPane;
    }

    private JXTaskPane createLineItemPane() {
	JXTaskPane lineItemPane = new JXTaskPane();
	lineItemPane.setTitle("Student Hours");
	lineItemPane.add(new TLActivitiesPanel(module));
	return lineItemPane;
    }
    
    private JXTaskPane createTutorHoursPane() {
	JXTaskPane tutorHoursPane = new JXTaskPane();
	tutorHoursPane.setTitle("Tutor Hours");
	tutorHoursPane.add(new TutorHoursPanel(module));
	return tutorHoursPane;
    }
    
    private JXTaskPane createTutorCostPane() {
	JXTaskPane tutorCostPane = new JXTaskPane();
	tutorCostPane.setTitle("Tutor Cost");
	tutorCostPane.add(new TutorCostPanel(module));
	return tutorCostPane;
    }

    private JXTaskPane createLearningTypeChartPane() {
	JXTaskPane typeChartPane = new JXTaskPane();
	typeChartPane.setTitle("Learning Types");
	ChartPanel chartPanel = LearningTypeChartFactory.createChartPanel(module);
	chartPanel.setPreferredSize(new Dimension(200, 300));
	typeChartPane.add(chartPanel);
	return typeChartPane;
    }

    private JXTaskPane createLearningExperienceChartPane() {
	JXTaskPane experienceChartPane = new JXTaskPane();
	experienceChartPane.setTitle("Learning Experiences");
	ChartPanel chartPanel = LearningExperienceChartFactory.createChartPanel(module);
	chartPanel.setPreferredSize(new Dimension(200,200));
	experienceChartPane.add(chartPanel);
	return experienceChartPane;
    }

    private JXTaskPane createHoursChartPane() {
	JXTaskPane hoursChartPane = new JXTaskPane();
	hoursChartPane.setTitle("Hours");
	ChartPanel chartPanel = HoursChartFactory.createChartPanel(module);
	chartPanel.setPreferredSize(new Dimension(200, 300));
	hoursChartPane.add(chartPanel);
	return hoursChartPane;
    }

    private JXTaskPane createTotalCostsPane() {
	JXTaskPane costPane = new JXTaskPane();
	costPane.setTitle("Profit & Loss");
	costPane.add(new CostPanel(module));
	return costPane;
    }
}
