/*
 * Copyright 2014 London Knowledge Lab, Institute of Education.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package uk.ac.lkl.cram.ui;

import java.awt.Dialog;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.text.MessageFormat;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.undo.CompoundEdit;
import org.openide.DialogDisplayer;
import org.openide.WizardDescriptor;
import uk.ac.lkl.cram.model.Module;
import uk.ac.lkl.cram.model.TLALineItem;
import uk.ac.lkl.cram.model.UserTLALibrary;
import uk.ac.lkl.cram.ui.wizard.TLACreatorWizardIterator;

/**
 * This class implements a panel used to create a list of TLAs. It is used
 * by the ModuleOkCancelDialog class as a sub-panel. It consists of a table to
 * render the activities that have been added, plus action buttons to edit, add 
 * and remove an activity to/from the table.
 * @see ModuleOkCancelDialog
 * @see ModuleTableModel
 * @version $Revision$
 * @author Bernard Horan
 */
//$Date$
@SuppressWarnings("serial")
public class ListOfTLAWizardPanel extends javax.swing.JPanel {
    private static final Logger LOGGER = Logger.getLogger(ListOfTLAWizardPanel.class.getName());

    /**
     * The module that will manage the TLAs
     */
    private Module module;

    /**
     * Create a new panel
     */
    public ListOfTLAWizardPanel() {
	initComponents();
    }
    
    /**
     * Set the module of the panel. This in turn sets up the table in the 
     * panel.
     * @param module the module that will manage the activities
     */
    public void setModule(Module module) {
	this.module = module;
	//Set the model for the table
	activitiesTable.setModel(new ModuleTableModel(module, false));
	//Set the dimensions for the table
	activitiesTable.getColumnModel().getColumn(0).setPreferredWidth(150);
	activitiesTable.getTableHeader().setPreferredSize(new Dimension(activitiesTable.getColumnModel().getTotalColumnWidth(),36));
	//set the selection model for the table 
	activitiesTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
	    @Override
	    public void valueChanged(ListSelectionEvent lse) {
		//Only interested when the user has stopped making a selection
		if (!lse.getValueIsAdjusting()) {

		    if (activitiesTable.getSelectedRow() == -1) {
			//No selection, disable delete and edit buttons.
			deleteButton.setEnabled(false);
			editButton.setEnabled(false);

		    } else {
			//Selection, enable the delete and edit button.
			deleteButton.setEnabled(true);
			editButton.setEnabled(true);
		    }
		}
	    }
	});
	//Add a mouse listener--double-click means edit the selected row
        activitiesTable.addMouseListener(new MouseAdapter() {
	    @Override
	    public void mouseClicked(MouseEvent e) {
		if (e.getClickCount() == 2) {
		    editButtonActionPerformed(null);
		}
	    }
	});
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        activitiesTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        addButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();

        activitiesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Activity", "Number of Weeks", "Weekly Hours", "Non-Weekly Hours", "Total Hours"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(activitiesTable);
        activitiesTable.getColumnModel().getColumn(0).setPreferredWidth(250);
        activitiesTable.getColumnModel().getColumn(1).setResizable(false);
        activitiesTable.getColumnModel().getColumn(2).setResizable(false);
        activitiesTable.getColumnModel().getColumn(3).setResizable(false);
        activitiesTable.getColumnModel().getColumn(4).setResizable(false);

        addButton.setText("Add...");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        jPanel1.add(addButton);

        deleteButton.setText("Delete...");
        deleteButton.setEnabled(false);
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        jPanel1.add(deleteButton);

        editButton.setText("Edit...");
        editButton.setEnabled(false);
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });
        jPanel1.add(editButton);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 435, Short.MAX_VALUE)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                .add(0, 0, 0)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
	//Set up a wizard to create a TLA
	TLACreatorWizardIterator iterator = new TLACreatorWizardIterator(module);
	WizardDescriptor wizardDescriptor = new WizardDescriptor(iterator);
	iterator.initialize(wizardDescriptor);
	// {0} will be replaced by WizardDescriptor.Panel.getComponent().getName()
	// {1} will be replaced by WizardDescriptor.Iterator.name()
	wizardDescriptor.setTitleFormat(new MessageFormat("{0} ({1})"));
	wizardDescriptor.setTitle("TLA Creator Wizard");
	Dialog dialog = DialogDisplayer.getDefault().createDialog(wizardDescriptor);
        dialog.setVisible(true);
        dialog.toFront();
        boolean cancelled = wizardDescriptor.getValue() != WizardDescriptor.FINISH_OPTION;
        if (!cancelled) {
	    //Get the newly created line item
	    TLALineItem lineItem = iterator.getLineItem();
	    //If the user created a new TLA, add it to their preferences
	    if (iterator.isVanilla()) {
		UserTLALibrary.getDefaultLibrary().addActivity(lineItem.getActivity());
	    }
	    //Add the line item to the module
            addLineItem(lineItem);
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
	//Get the selected line item
	int index = activitiesTable.getSelectedRow();
	TLALineItem li = module.getTLALineItems().get(index);
	//Confirm tthat the user really wants to delete the line item
	int reply = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete \'" + li.getName() + "\'?", "Delete TLA", JOptionPane.YES_NO_OPTION);
	if (reply == JOptionPane.YES_OPTION) {
	    removeLineItem(li);
	} else {
	    LOGGER.info("Delete cancelled");
	}
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        //Get the selected line item
	int index = activitiesTable.getSelectedRow();
        TLALineItem li = module.getTLALineItems().get(index);
	//Get the parent window
	Dialog parentDialog = (Dialog) SwingUtilities.getWindowAncestor(this);
	//Create a dialog box for the user to modify the line item
	//TODO modal dialogue
        TLAOkCancelDialog tlaDialog = new TLAOkCancelDialog((Frame)parentDialog.getParent(), true, module, li, new CompoundEdit());
        tlaDialog.setTitle("Modify TLA");
        tlaDialog.setVisible(true);
    }//GEN-LAST:event_editButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable activitiesTable;
    private javax.swing.JButton addButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void addLineItem(TLALineItem lineItem) {
	//LOGGER.info("Adding lineItem: " + lineItem);
	//Rely on property changes for the table to update
	module.addTLALineItem(lineItem);
    }

    private void removeLineItem(TLALineItem li) {
        //LOGGER.info("Removing line item: " + li);
	//Rely on property changes for the table to update
        li.removeFrom(module);
    }

}
